const { defineConfig } = require('cypress')
require('dotenv').config()

//const gViewPortSize = {small: 'phone-xr', large: 'macbook-16'} //TODO Use enum

module.exports = defineConfig({
  e2e: {
    projectId: 'rjvf4u',
    setupNodeEvents(on, config) {},
    baseUrl: 'https://staging-app.deriv.com',
    defaultCommandTimeout: 15000,
    supportFile: "cypress/support/e2e.js",
    experimentalWebKitSupport: true,
    chromeWebSecurity: false,
  },
  env: {
    prodURL: 'https://app.deriv.com/',
    derivComProdURL: 'https://deriv.com/',
    RegionEU: '/?region=at',
    RegionROW: '/?region=za',
    skipROWTests: false,
    email: 'test@example.com',
    viewPortSize: 'small',
    loginEmail: process.env.E2E_DERIV_LOGIN,
    loginPassword: process.env.E2E_DERIV_PASSWORD,
    p2pbuyloginEmail: process.env.E2E_P2P_BUY,
    p2psellloginEmail: process.env.E2E_P2P_SELL,
    loginEmailProd: process.env.E2E_DERIV_LOGIN_PROD,
    loginPasswordProd: process.env.E2E_DERIV_PASSWORD_PROD,
    prodServer: process.env.E2E_PROD_SERVER,
    prodAppId: process.env.E2E_PROD_APPID,
    doughflowLoginEmail:  process.env.E2E_DOUGHFLOW_LOGIN,
    doughflowLoginPassword: process.env.E2E_DOUGHFLOW_PASSWORD,
    qaBoxLoginEmail: process.env.E2E_QABOX_LOGIN,
    qaBoxLoginPassword: process.env.E2E_QABOX_PASSWORD,
    qaBoxBaseUrl: process.env.E2E_QABOX_BASEURL,
    mainQaBoxBaseUrl: process.env.E2E_MAIN_QABOX_BASEURL,
    mt5Login: process.env.E2E_MT5_LOGIN,
    mt5Password: process.env.E2E_MT5_PASSWORD,
    mt5BaseUrl: process.env.E2E_MT5_BASEURL,
    endpointPath: process.env.ENDPOINT_PATH,
    appstorePath: process.env.APPSTORE_PATH,
    configServer: process.env.E2E_CONFIG_SERVER,
    configAppId: process.env.E2E_CONFIG_APPID,
    onrampConfigAppId: process.env.E2E_ONRAMP_CONFIG_APPID,
    onrampProviderUrl: process.env.E2E_ONRAMP_PROVIDER_URL,
    doughflowConfigServer: process.env.E2E_DOUGHFLOW_CONFIG_SERVER,
    doughflowConfigAppId: process.env.E2E_DOUGHFLOW_CONFIG_APPID,
    stdConfigServer: process.env.E2E_STD_CONFIG_SERVER,
    stdConfigAppId: process.env.E2E_STD_CONFIG_APPID,
    oAuthUrl: process.env.E2E_OAUTH_URL,
    demoOAuthUrl: process.env.E2E_DEMO_WALLET_OAUTH_URL,
    demoOAuthToken: process.env.E2E_DEMO_OAUTH_TOKEN,
    oAuthToken: process.env.E2E_OAUTH_TOKEN,
    doughflowOAuthUrl: process.env.E2E_DOUGHFLOW_OAUTH_URL,
    doughflowOAuthToken: process.env.E2E_DOUGHFLOW_OAUTH_TOKEN,
    walletsWithdrawalUrl: process.env.E2E_WALLETS_WITHDRAWAL_URL,
    walletsWithdrawalCode: process.env.E2E_WALLETS_WITHDRAWAL_CODE,
    verificationdUrl:  process.env.E2E_WALLETS_PASSWORD_URL,
    HMACKey: process.env.E2E_HMAC_KEY,
    username_cr_unauthenticated: process.env.E2E_USENAME_BOT,
    password: process.env.E2E_PASS_BOT,
    tradersHubUrl: 'appstore/traders-hub',
    emailVerificationCode : process.env.E2E_EMAIL_VERIFICATION_CODE,
    emailUser: process.env.E2E_AUTH_EMAIL_USER,
    emailPassword: process.env.E2E_AUTH_EMAIL_PASSWORD,
    event_email_url: process.env.E2E_EVENTS_EMAIL,
    diel_country_list: ['Ecuador', 'South Africa', 'Brazil', 'Sri Lanka', 'Uruguay', 'Switzerland'],
    CoROnfidoROW: process.env.E2E_COUNTRY_OF_RESI_ROW_ONFIDO,
    CoRIDVROW: process.env.E2E_COUNTRY_OF_RESI_ROW_IDV,
    CoRMF: process.env.E2E_COUNTRY_OF_RESI_MF,
    user_password: process.env.E2E_USERPASSWORD,
    citizenshipOnfidoROW: process.env.E2E_CITIZENSHIP_ROW_ONFIDO,
    citizenshipIDVROW: process.env.E2E_CITIZENSHIP_ROW_IDV,
    citizenshipMF: process.env.E2E_CITIZENSHIP_MF,
    dielCountry: 'South Africa'
  },  
  retries: {
      "runMode": 2,
      "openMode": 0
    },
})
